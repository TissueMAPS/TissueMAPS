# TmDeploy - Automated setup and deployment of TissueMAPS in the cloud.
# Copyright (C) 2016-2019 University of Zurich.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
---

- name: Install additional software
  package:
    name:
      - nginx
      - uwsgi
      - uwsgi-plugin-python
      - uwsgi-plugin-gevent-python
    state: present


- name: (De)Configure NginX for use with TissueMAPS
  import_tasks: nginx.yml


- name: Compile JS assets
  import_tasks: tmui.yml


# destination directories have been created in role
# `tissuemaps-common` already
- name: Deploy TM configuration files
  template:
    dest: '{{ item.dest }}'
    src:  '{{ item.src }}'
    owner: root
    group: root
  loop:
    # the following files are shared among *all* TM instances, so
    # their content should include a parameter depending on the host name
    - src: 'tm_jobdaemon.log.conf.j2'
      dest: '{{ tm_user_home }}/.gc3/tm_jobdaemon.log.conf'
    # the following files reside on a local filesystem on each TM instance
    - src: 'uwsgi.ini.j2'
      dest: '{{ tm_root }}/etc/uwsgi.ini'
    - src: 'nginx.conf.j2'
      dest: '{{ tm_root }}/etc/nginx.conf'
    - src: 'env.sh.j2'
      dest: '{{ tm_root }}/bin/env.sh'
    - src: 'tm_httpd.sh.j2'
      dest: '{{ tm_root }}/bin/tm_httpd.sh'
    - src: 'tm_jobdaemon.sh.j2'
      dest: '{{ tm_root }}/bin/tm_jobdaemon.sh'
    - src: 'tm_server.sh.j2'
      dest: '{{ tm_root }}/bin/tm_server.sh'
    - src: 'tm_httpd.supervisord.j2'
      dest: '/etc/supervisor/conf.d/tm_httpd.conf'
    - src: 'tm_jobdaemon.supervisord.j2'
      dest: '/etc/supervisor/conf.d/tm_jobdaemon.conf'
    - src: 'tm_server.supervisord.j2'
      dest: '/etc/supervisor/conf.d/tm_server.conf'
    - src: 'tissuemaps.logrotate.j2'
      dest: '/etc/logrotate.d/tissuemaps.conf'


- name: Make TM start scripts executable
  file:
    path: '{{ item }}'
    mode: 'a+rx'
  notify: supervisord reread
  loop:
    - '{{ tm_root }}/bin/tm_httpd.sh'
    - '{{ tm_root }}/bin/tm_jobdaemon.sh'
    - '{{ tm_root }}/bin/tm_server.sh'


- name: 'Ensure relevant directories are owner by {{ tm_user }}'
  file:
    path: '{{ item }}'
    owner: '{{ tm_user }}'
    group: '{{ tm_group }}'
    recurse: yes
  loop:
    - '{{ tm_root }}/log'
    - '{{ tm_root }}/run'
    - '{{ tm_root }}/src'
    - '{{ tm_root }}/var/jobdaemon'


- name: Export TM root to compute nodes
  include_tasks: export_tm_root.yml
  when: '"slurm_worker" in groups'


# we need services to be up before we attempt to create users, so
# force running handlers here and now
- name: Run handlers
  meta: flush_handlers


- name: Create TissueMAPS users
  tags:
    - database
    - tissuemaps
    - users
  shell: |
    . {{ tm_root }}/bin/env.sh
    . {{ tm_root }}/bin/activate
    tm_add user \
      --name {{ item['name'] }} \
      --password {{ item['password'] | string | quote }} \
      --email {{ item['email'] }}
  become: yes
  become_user: '{{ tm_user }}'
  loop: "{{ tm_create_users|default([]) }}"
