# TmDeploy - Automated setup and deployment of TissueMAPS in the cloud.
# Copyright (C) 2016-2019 University of Zurich.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---
# (Re)start services and enable them such that they will be automatically
# started upon system startup.
# We don't do this within the respective roles for compatibility with
# Ansible-container.
- name: Refresh tmpfiles.d
  hosts: all
  gather_facts: yes
  any_errors_fatal: yes
  tasks:
    - name: Create directories defined in tmpfiles.d
      command: systemd-tmpfiles --create
    - name: Restart ssh daemon service
      systemd:
        name: "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"
        state: restarted


- name: Initialize database master server
  hosts:
    - tissuemaps_db_master
  gather_facts: yes
  any_errors_fatal: yes
  tasks:
    - name: Enable and start postgresql service
      systemd:
        name: postgresql@master
        daemon_reload: yes
        state: restarted
        enabled: yes


- name: Initialize database worker servers
  hosts:
    - tissuemaps_db_worker
  gather_facts: yes
  any_errors_fatal: yes
  tasks:
    - name: Enable and start postgresql service
      systemd:
        name: postgresql@worker
        daemon_reload: yes
        state: restarted
        enabled: yes


- name: Set up Citus distributed DB
  hosts:
    - tissuemaps_db_master
  gather_facts: yes
  any_errors_fatal: yes
  vars_files:
    - roles/common/defaults/main.yml
  tasks:
  - name: Add Citus worker nodes
    shell: |
      if ! (psql -d '{{ db_name }}' \
              -t -P format=unaligned \
              -c "SELECT * FROM master_get_active_worker_nodes();" \
              | egrep -q '^{{ item }}|');
      then
        psql -d '{{ db_name }}' -c "SELECT * FROM master_add_node('{{ item }}', {{ db_port_worker }});"
      fi
    with_items: "{{ groups.tissuemaps_db_worker }}"
    become: yes
    become_user: postgres

  - name: Create database tables
    tags:
      - database
      - tissuemaps
    command: |
      {{ tm_home }}/.local/bin/tm_create_tables
    args:
      chdir: "{{ tm_home }}"
    become: yes
    become_user: '{{ tm_user }}'
    when: ansible_env.ANSIBLE_CONTAINER is undefined

  - name: Create TissueMAPS users
    tags:
      - database
      - tissuemaps
    command: |
      {{ tm_home }}/.local/bin/tm_add user --name {{ item['name'] }} --password {{ item['password'] | string | quote }} --email {{ item['email'] }}
    args:
      chdir: "{{ tm_home }}"
    become: yes
    become_user: '{{ tm_user }}'
    with_items: "{{ tm_users }}"
    when: ansible_env.ANSIBLE_CONTAINER is undefined
